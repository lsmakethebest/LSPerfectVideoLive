

//
//  KCPayPasswordField.m
//  driver
//
//  Created by 刘松 on 16/7/5.
//  Copyright © 2016年 driver. All rights reserved.
//

#import "KCPayPasswordView.h"

#define TITLE_HEIGHT 30
#define PAYMENT_WIDTH [UIScreen mainScreen].bounds.size.width-80
#define PWD_COUNT 6
#define DOT_WIDTH 10
#define KEYBOARD_HEIGHT 216
#define KEY_VIEW_DISTANCE 100
#define ALERT_HEIGHT 150

@interface KCPayPasswordView()<UITextFieldDelegate>

{
    NSMutableArray *pwdIndicatorArr;
}
@property (nonatomic, strong) UIView *paymentAlert;
@property (nonatomic, strong) UIButton *closeBtn;
@property (nonatomic, strong) UILabel *titleLabel, *detailLabel;
@property (nonatomic, strong) UITextField *pwdTextField;
@property (nonatomic,copy) CompleteHandle completeHandle;
@end

@implementation KCPayPasswordView

- (instancetype)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        [self setupViews];
    }
    return self;
}
-(void)setupViews
{
    [IQKeyboardManager sharedManager].enable=NO;
    [KCNotificationCenter addObserver:self selector:@selector(show:) name:UIKeyboardWillShowNotification object:nil];
    [KCNotificationCenter addObserver:self selector:@selector(hide:) name:UIKeyboardWillHideNotification object:nil];
//    self.backgroundColor=[UIColor colorWithWhite:0.321 alpha:0.393];
    UITapGestureRecognizer *tap=[[UITapGestureRecognizer alloc]
                                 initWithTarget:self
                                 action:@selector(handleGesture:)];
    [self addGestureRecognizer:tap];
    self.backgroundColor=[UIColor colorWithWhite:0.5 alpha:0.5];
    CGSize size= [UIScreen mainScreen].bounds.size;
    _paymentAlert = [[UIView alloc]initWithFrame:CGRectMake(0, size.height-ALERT_HEIGHT,[UIScreen mainScreen].bounds.size.width, ALERT_HEIGHT)];
    _paymentAlert.backgroundColor = [UIColor whiteColor];
    [self addSubview:_paymentAlert];
    
    _titleLabel = [[UILabel alloc]initWithFrame:CGRectMake(0, 10, size.width, TITLE_HEIGHT)];
    _titleLabel.text=@"请输入支付密码";
    _titleLabel.textAlignment = NSTextAlignmentCenter;
    _titleLabel.textColor = KCColor2;
    _titleLabel.font = [UIFont systemFontOfSize:17];
//    _titleLabel.backgroundColor=RandomColor;
    [_paymentAlert addSubview:_titleLabel];
    
    _closeBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [_closeBtn setFrame:CGRectMake(size.width-40, 0, 40, 40)];
    [_closeBtn setTitle:@"╳" forState:UIControlStateNormal];
    [_closeBtn setTitleColor:[UIColor darkGrayColor] forState:UIControlStateNormal];
    [_closeBtn addTarget:self action:@selector(dismiss) forControlEvents:UIControlEventTouchUpInside];
    _closeBtn.titleLabel.font = [UIFont systemFontOfSize:15];
    [_paymentAlert addSubview:_closeBtn];
    
    
    _detailLabel = [[UILabel alloc]initWithFrame:CGRectMake(0, 30+10, size.width, 20)];
    _detailLabel.textAlignment = NSTextAlignmentCenter;
    _detailLabel.textColor = [UIColor darkGrayColor];
    _detailLabel.font = [UIFont systemFontOfSize:16];
    [_paymentAlert addSubview:_detailLabel];
    
    

    
    pwdIndicatorArr = [[NSMutableArray alloc]init];
    
    
    _pwdTextField = [[UITextField alloc]initWithFrame:CGRectMake(0, 0, self.frame.size.width, self.frame.size.height)];
    _pwdTextField.hidden = YES;
    _pwdTextField.delegate = self;
    _pwdTextField.keyboardType = UIKeyboardTypePhonePad;
    [_paymentAlert addSubview:_pwdTextField];
    
    CGFloat width = 40;
    CGFloat margin=2;
    CGFloat leftMargin=(size.width-PWD_COUNT*width-(PWD_COUNT-1)*margin)/2;
    
    for (int i = 0; i < PWD_COUNT; i ++) {
        UIView *bord = [[UIView alloc]initWithFrame:CGRectMake(leftMargin+i*(width+margin), 80, width, width)];
        bord.borderColor=[UIColor colorWithRed:62.0/255 green:161.0/255 blue:220.0/255 alpha:1];

        [_paymentAlert addSubview:bord];
        
        
        UILabel *dot = [[UILabel alloc]init];
        dot.frame=CGRectMake(0, 0, DOT_WIDTH, DOT_WIDTH);
        dot.center=bord.center;
        dot.backgroundColor = [UIColor blackColor];
        dot.layer.cornerRadius = DOT_WIDTH/2.;
        dot.clipsToBounds = YES;
        dot.hidden = YES;
        [_paymentAlert addSubview:dot];
        [pwdIndicatorArr addObject:dot];
    }
    
    UIView *line=[[UIView alloc]init];
    line.backgroundColor=[UIColor grayColor];
    line.alpha=1;
    line.width=_paymentAlert.width;
    line.y=_paymentAlert.height-0.5;
    line.height=0.5;
    [_paymentAlert addSubview:line];
    

}

+(void)showWithprice:(NSString *)price type:(NSString*)type completeHandle:(CompleteHandle)completeHandle
{
    UIWindow *keyWindow = [UIApplication sharedApplication].keyWindow;
    KCPayPasswordView *alertView=[[KCPayPasswordView alloc]initWithFrame:[UIScreen mainScreen].bounds];
    alertView.completeHandle=completeHandle;
    [keyWindow addSubview:alertView];
    alertView.titleLabel.text=@"请输入支付密码";
    NSString *title=[NSString stringWithFormat:@"本次%@:",type];
        NSString *str=[NSString stringWithFormat:@"%@%@ 元",title,price];
    NSMutableAttributedString *attributedString=[[NSMutableAttributedString alloc]initWithString:str];
    [attributedString addAttribute:NSForegroundColorAttributeName value:KCColor2 range:[str rangeOfString:title]];
    [attributedString addAttribute:NSForegroundColorAttributeName value:KCColor7 range:[str rangeOfString:price]];
    [attributedString addAttribute:NSForegroundColorAttributeName value:KCColor2 range:[str rangeOfString:@" 元"]];
    [attributedString addAttribute:NSFontAttributeName value:KCFont4 range:[str rangeOfString:str]];
    alertView.detailLabel.attributedText=attributedString;
    [alertView.pwdTextField becomeFirstResponder];
//    alertView.paymentAlert.transform = CGAffineTransformMakeScale(1.21f, 1.21f);
//    alertView.paymentAlert.alpha = 0;
//    
//    [UIView animateWithDuration:.7f delay:0.f usingSpringWithDamping:.7f initialSpringVelocity:1 options:UIViewAnimationOptionCurveEaseInOut animations:^{
//        [alertView.pwdTextField becomeFirstResponder];
//        alertView.paymentAlert.transform = CGAffineTransformMakeScale(1.0f, 1.0f);
//        alertView.paymentAlert.alpha = 1.0;
//    } completion:nil];
}

-(void)handleGesture:(UITapGestureRecognizer*)tap
{
    if (!CGRectContainsPoint(self.paymentAlert.frame ,[tap locationInView:tap.view])) {
        [self dismiss];
    }
}
/// 消失
-(void)dismiss
{
    [self.pwdTextField resignFirstResponder];
    [UIView animateWithDuration:0.25 animations:^{
        self.alpha = 0;
        
    }completion:^(BOOL finished) {
        [self removeFromSuperview];
    }];
}
-(void)show:(NSNotification*)note
{

    CGFloat y = [note.userInfo[UIKeyboardFrameEndUserInfoKey]  CGRectValue].origin.y;
    CGFloat height=SCREEN_H-y;

        [UIView animateWithDuration:0.25 animations:^{
            self.paymentAlert.y=SCREEN_H-height-ALERT_HEIGHT;
            
        }];
}
-(void)hide:(NSNotification*)note
{
    
    [UIView animateWithDuration:0.25 animations:^{
        self.paymentAlert.y=SCREEN_H-ALERT_HEIGHT;
    }];
}
-(void)dealloc
{
    [IQKeyboardManager sharedManager].enable=YES;
}
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string {
    
    if (textField.text.length >= PWD_COUNT && string.length) {
        //输入的字符个数大于6，则无法继续输入，返回NO表示禁止输入
        return NO;
    }
    
    NSPredicate *predicate = [NSPredicate predicateWithFormat:@"SELF MATCHES %@",@"^[0-9]*$"];
    if (![predicate evaluateWithObject:string]) {
        return NO;
    }
    NSString *totalString;
    if (string.length <= 0) {
        totalString = [textField.text substringToIndex:textField.text.length-1];
    }
    else {
        totalString = [NSString stringWithFormat:@"%@%@",textField.text,string];
    }
    [self setDotWithCount:totalString.length];
    
    if (totalString.length == 6) {
        if (self.completeHandle) {
            self.completeHandle(totalString);
        }
//        [self performSelector:@selector(dismiss) withObject:nil afterDelay:.3f];
        [self dismiss];
    }
    
    return YES;
}

- (void)setDotWithCount:(NSInteger)count {
    for (UILabel *dot in pwdIndicatorArr) {
        dot.hidden = YES;
    }
    for (int i = 0; i< count; i++) {
        ((UILabel*)[pwdIndicatorArr objectAtIndex:i]).hidden = NO;
    }
}
@end
